var errors			= Alloy.Globals.errors,
	core			= Alloy.Globals.core;
	address			= false,
	lat				= false,
	lng				= false,
	subCategories	= [],
	image			= false,
	imageUpdated	= false,
	sectionName		= "",
	progress 		= Alloy.Globals.progress,
	callback		= (arguments[0] && arguments[0].callback) || false,
	newSupplier		= true;

var indicator = Alloy.Globals.indicator;

function blur(e)
{
	hideKeyboard(e);
}

function hideKeyboard(e)
{
	if(e.source.id !== $.about.id)
		$.about.blur();
	if(e.source.id !== $.name.id)
		$.name.blur();
	if(e.source.id !== $.companyNumber.id)
		$.companyNumber.blur();
	if(e.source.id !== $.phone.id)
		$.phone.blur();
	if(e.source.id !== $.email.id)
		$.email.blur();
	if(e.source.id !== $.address.id)
		$.address.blur();
	if(e.source.id !== $.workingHours.id)
		$.workingHours.blur();
	if(e.source.id !== $.terms.id)
		$.terms.blur();
}

function focus(e)
{
	hideKeyboard(e);
}

function buttonTouchStart(e){	
	e.source.backgroundColor = Alloy.Globals.Styles.buttonBgOnTap;
}


function buttonTouchEnd(e){
	indicator.openIndicator();
	e.source.backgroundColor = Alloy.Globals.Styles.buttonBg;
	if(e.source.id == "update")
		onClick();
	else if(e.source.id == "customLocation")
		 {
		 	customLocation();			
		 }
}
$.address.setHintText(L("enter_address"));
if(Alloy.Globals.profile) {
	if(Alloy.Globals.profile.supplier) {
		newSupplier = false;
		$.window.title = L('edit_company');
		$.update.title = L('update');	
		subCategories			= JSON.parse(Alloy.Globals.profile.supplier.subCategories); 
		$.name.value			= Alloy.Globals.profile.supplier.name; 
		$.phone.value			= Alloy.Globals.profile.supplier.phone; 
		$.email.value			= Alloy.Globals.profile.supplier.email; 
		$.address.value			= Alloy.Globals.profile.supplier.address;
		$.companyNumber.value	= Alloy.Globals.profile.supplier.number;
		lat						= parseFloat(Alloy.Globals.profile.supplier.lat);
		lng						= parseFloat(Alloy.Globals.profile.supplier.lng);
		$.about.value			= Alloy.Globals.profile.supplier.about;
		$.workingHours.value	= Alloy.Globals.profile.supplier.workingHours;
		$.terms.value			= Alloy.Globals.profile.supplier.terms;
		if(Alloy.Globals.profile.supplier.logo) {
			image					= Alloy.Globals.profile.supplier.logoUrl + Alloy.Globals.profile.supplier.logoId + Alloy.Globals.imageSizes.supplier.edit();
			$.imageView.image 		= image;
			$.imageView.visible		= true;
			$.imageView.height		= Ti.UI.SIZE;
			$.imageView.bottom		= "10dp";
			$.deleteImage.visible	= true;
		}
		
		core.selectedCategoriesInEdit = {};
		for (var i=0; i < subCategories.length; ++i)
		{		
			var s = subCategories[i];
			core.subCategories.select({categoryId: s.CategoryId, id: s.Id }, core.selectedCategoriesInEdit);
		}
		sectionName = "";
		Alloy.Globals.core.currentSection = sectionName;
		showCategories();
	}
	else {
		$.phone.value = Alloy.Globals.profile.phone; 
		$.email.value = Alloy.Globals.profile.email;		
	}
}

function showCategories()
{
	$.selectedCategories.text = '';
	for(var categoryKey in core.currentSectionCategories())
	{
		if(Object.size(core.currentSectionCategories()[categoryKey]) > 0)
		{
			categoryKey = categoryKey.replace('_','');
			var category = Alloy.Collections.categories.get(categoryKey);
			if(category)
			{
				if($.selectedCategories.text == '')
					$.selectedCategories.text += category.attributes['name'];
				else
					$.selectedCategories.text += ', ' + category.attributes['name'];
			}
		}
	}
}


function updateCacheProfile(){
	/*
	if(Alloy.Globals.profile.supplier) {
		$.window.title = L('edit_company');
		$.update.title = L('update');	
		Alloy.Globals.profile.supplier.subCategories 	=   subCategories.join('.'); 
		Alloy.Globals.profile.supplier.name 			= 	$.name.value; 
		Alloy.Globals.profile.supplier.email 			= 	$.email.value; 
		Alloy.Globals.profile.supplier.address 			= 	$.address.value; 
		Alloy.Globals.profile.supplier.phone 			= 	$.phone.value; 
		Alloy.Globals.profile.supplier.lat				=	lat;
		Alloy.Globals.profile.supplier.lng				=	lng;
		Alloy.Globals.profile.supplier.about 			= 	$.about.value; 
		Alloy.Globals.profile.supplier.workingHours 	= 	$.workingHours.value; 
		Alloy.Globals.profile.supplier.terms 			= 	$.terms.value; 
	
	}
	else {
		Alloy.Globals.profile.supplier.email 	= 	$.email.value; 
		Alloy.Globals.profile.supplier.phone 	= 	$.phone.value; 
	}
	*/
}

function onClick() {
	if(!Alloy.Globals.core.apiToken()) {

		var alertDialog = Titanium.UI.createAlertDialog({
			title:L('signup_or_signin_title'),
			message:L('signup_or_signin_message'),
			buttonNames:[L('no'),L('yes')],
			cancel:0
		});

		alertDialog.addEventListener('click', function(e){

			if(e.cancel === e.index || e.cancel === true) 
				return;
			Alloy.Globals.tabGroup.setActiveTab(Alloy.CFG.tabAccount);
		});
		indicator.closeIndicator();
		alertDialog.show();
		return;
	}

	if(subCategories.length ==0) {
		indicator.closeIndicator();
		Alloy.Globals.core.showErrorDialog(L('please_select_category'));
		return;
	}
	var subcategoriesForSave = [];
	for (var i=0; i < subCategories.length; ++i)
	{		
		var s = subCategories[i];
		if(s.Id)
			subcategoriesForSave.push(s.Id);
		else
			subcategoriesForSave.push(s);
	}
	var company = Alloy.createModel(
    	'company', {
    		name			: $.name.value, 
    		phone			: $.phone.value,
			email			: $.email.value,
			address			: $.address.value,
			lat				: parseFloat(lat),
			lng				: parseFloat(lng),
			subCategories	: JSON.stringify(subcategoriesForSave),
			about			: $.about.value,
			workingHours	: $.workingHours.value,
			terms			: $.terms.value,
			number			: $.companyNumber.value,
			haveImage		: image !== false,
			language		: Ti.Platform.locale
		}
	);
	
	if(company.localValidate(errorHandler)) {
		if(!lat || !lng || $.address.value !== address) {
			geo.geocoding($.address.value, function(e) {
				if(e.error == geo.elementStatuses.ZERO_RESULTS || e.error == geo.elementStatuses.NOT_FOUND)
				{
					indicator.closeIndicator();
					Alloy.Globals.core.showErrorDialog(L("address_not_found"));
					return;
				}
				
				else if(e && e.response && e.response.results && e.response.results.length > 0){
					// save model
					company.attributes.lat = parseFloat(e.response.results[0].geometry.location.lat);
					company.attributes.lng = parseFloat(e.response.results[0].geometry.location.lng);
					if(!Alloy.Globals.profile.supplier)
					{
						var alertDialog = Titanium.UI.createAlertDialog({			
							message:L('only_register_company'),
							buttonNames:[L('cancel'),L('ok')],
							cancel:0
						});
					
						alertDialog.addEventListener('click', function(e){
					
							if(e.cancel === e.index || e.cancel === true) 
							{
								indicator.closeIndicator();
								return;
							}
							saveSupplier(company);
						});
						alertDialog.show();
					}
					else
						saveSupplier(company);
				}
				else
				{
					indicator.closeIndicator();
					Alloy.Globals.core.showErrorDialog(L("address_not_found"));
					return;
				}
			});
		}	
	}
	else
		indicator.closeIndicator();
}


function saveSupplier(company) {
	Ti.API.info("Save company start");
	company.save({}, {
		success : function(model, response, options) {
			Ti.App.fireEvent('account:itIsSupplier');
			Ti.API.info("Company saved");
			if (image && imageUpdated) {
				var upload = Alloy.Globals.upload;
				var images = [];

				var factor = 1;
				var size = 400;
				var height = image.height;
				var width = image.width;
				// Create an ImageView.
				var newImageView = Ti.UI.createImageView({
					image : image,
					width : width,
					height : height
				});
				if (width < height) {
					factor = width / height;
					newImageView.height = size;
					newImageView.width = size * factor;
				} else {
					factor = height / width;
					newImageView.width = size;
					newImageView.height = size * factor;
				}
				image = newImageView.toImage();
				images.push(image);
				progress.openBar();
				Ti.API.info("Save image company start");
				upload.start({
					type : upload.types.logo,
					id : response,
					blobs : images,
					onerror : function(e) {/*Alloy.Globals.core.showErrorDialog(e);*/
						progress.closeBar();						
						Ti.API.info("Save image error");
						Alloy.Globals.core.showErrorDialog(L("error_loading_image"));
						Ti.API.error(e.source);
					},
					onload : function(e) {
						progress.setBarValue(1);
						progress.closeBar();
						updateCacheProfile();
						Ti.API.info("Image saved");
						postUpdate();
					},
					onsendstream : function(e) {
						progress.setBarValue(e.progress);
						Ti.API.info("progress - " + e.progress);
					}
				});
			} else {
				updateCacheProfile();
				postUpdate();
			}
			indicator.closeIndicator();
		},
		error : function(model, xhr, options) {
			indicator.closeIndicator();
		}
	});
}



function customLocation() {	
	var geo = Alloy.Globals.geo;
	geo.checkLocation(function() {
		if(geo.location.status != geo.errors.NONE) {
			Alloy.Globals.core.showErrorDialog(L(geo.location.status.message));
			indicator.closeIndicator();
			return;
		}
		lat = geo.location.lat;
		lng = geo.location.lng;
		geo.reverseGeocoding(geo.location.latitude, geo.location.longitude, function(e) {
			indicator.closeIndicator();
			if (e && e.error) {
				if (e.message)
					Alloy.Globals.core.showErrorDialog(L(e.message));
				else
					Alloy.Globals.core.showErrorDialog(L(e.error));
			} else if (e && e.response) {
				if(e.response.results && e.response.results[0] && e.response.results[0].formatted_address)
					$.address.value = e.response.results[0].formatted_address;
				else if(e.response.resourceSets && e.response.resourceSets[0] && e.response.resourceSets[0].resources[0].address.formattedAddress)
					$.address.value = e.response.resourceSets[0].resources[0].address.formattedAddress;
			}
		});	
	});
}

var rowIndex;
function search(){	
	geo.geocoding($.address.value, function(geodata) {
		if(geodata.error == geo.elementStatuses.ZERO_RESULTS || geodata.error == geo.elementStatuses.NOT_FOUND)
		{
			indicator.closeIndicator();
			Alloy.Globals.core.showErrorDialog(L("address_not_found"));
			return;
		} 
		var items = [];
		for (var i=0; i < geodata.response.results.length; i++) {
		  var result = geodata.response.results[i];
		  items.push({title: result.formatted_address, data:{lat: result.geometry.location.lat, lng:result.geometry.location.lng}});
		  
		};		
		var addressPicker = Alloy.createController('picker/genericPicker', {
			callback: function(item, close, index) {				 
				if(!item.title)				 
					$.address.value = item;
				else
					$.address.value = item.title;
				if(item.data)
				{
					lat = item.data.lat;
					lng = item.data.lng;
				}
				if(index)
					rowIndex = index;
				if(close){
					$.pickerWrap.removeAllChildren();					
				}
			},
			rowIndex: rowIndex,
			items: items
		}).getView();	
		
		closeKeyboard();
		$.pickerWrap.removeAllChildren();
		$.pickerWrap.add(addressPicker);
		
	});
};

function closeKeyboard()
{
	$.address.blur();	
}


function postUpdate() {
	indicator.closeIndicator();
	Alloy.Globals.core.showErrorDialog(L('company_updated_label'));
	Ti.App.fireEvent('account:updateProfile');
	$.window.close();
	companySaved = true;
}

var companySaved = false;

function close()
{
	if(callback && companySaved)
		callback(newSupplier);
}

function errorHandler(err) {
	switch(err) {
		case errors.NO_COMPANY_NAME:
			$.name.focus();
			break;
		case errors.NO_EMAIL:
			$.email.focus();
			break;
		case errors.INVALID_EMAIL:
			$.email.focus();
			break;
		case errors.NO_NUMBER:
		case errors.INVALID_NUMBER:
			$.companyNumber.focus();
			break;
		case errors.NO_PHONE:
			$.phone.focus();
			break;
		case errors.INVALID_PHONE:
			$.phone.focus();
			break;
		case errors.NO_ADDRESS:
			$.address.focus();
			break;
		case errors.NO_ABOUT:
			$.about.focus();
			break;
		case errors.NO_WORKING_HOURS:
			$.workingHours.focus();
			break;
		case errors.NO_TERMS:
			$.terms.focus();
			break;
	}
	Alloy.Globals.core.showError(err);
}
	

function currenLocation() {
	var geo = Alloy.Globals.geo;
	geo.checkLocation(function() {
		if (geo.location.status != geo.errors.NONE) {
			Alloy.Globals.core.showErrorDialog(L(geo.location.status.message));
			indicator.closeIndicator();
			return;
		}
		lat = geo.location.lat;
		lng = geo.location.lng;
		geo.reverseGeocoding(geo.location.latitude, geo.location.longitude, function(e) {
			indicator.closeIndicator();
			if (e && e.error) {
				if (e.message)
					Alloy.Globals.core.showErrorDialog(L(e.message));
				else
					Alloy.Globals.core.showErrorDialog(L(e.error));
			} else if (e && e.response) {
				if (e.response.results && e.response.results[0] && e.response.results[0].formatted_address)
					$.address.value = e.response.results[0].formatted_address;
				else if (e.response.resourceSets && e.response.resourceSets[0] && e.response.resourceSets[0].resources[0].address.formattedAddress)
					$.address.value = e.response.resourceSets[0].resources[0].address.formattedAddress;
			}
		});
	});
}



var optionsPhotoDialog = {
	options:['Make Photo', 'Choose Photo', 'Cancel'],
	cancel:2
};
var photoDialog = Titanium.UI.createOptionDialog(optionsPhotoDialog);
photoDialog.addEventListener('click',function(e)
	{
		if (e.index == 0) {showCamera();}
		if(e.index == 1){openGallery();}
	});
function addPhoto(){
	photoDialog.show();
}
function openGallery() {
	Titanium.Media.openPhotoGallery({
		success: function(e) {
			if (e.mediaType == Titanium.Media.MEDIA_TYPE_PHOTO) {
				image = e.media;
				$.imageView.image = image;
				$.deleteImage.visible = true; 
				$.imageView.height		= Ti.UI.SIZE;
				$.imageView.bottom		= "10dp";
				$.imageView.visible		= true;
				//$.gallery.visible = false;
				//$.camera.visible = false;
				imageUpdated = true;
			}
		}
	});
}

function showCamera() {
	Titanium.Media.showCamera({
		success: function(e) {
			if (e.mediaType == Titanium.Media.MEDIA_TYPE_PHOTO) {
				image = e.media;
				$.imageView.image = image;
				$.deleteImage.visible = true;  
				$.imageView.visible		= true;
				$.imageView.height		= Ti.UI.SIZE;
				$.imageView.bottom		= "10dp";
				//$.gallery.visible = false;
				//$.camera.visible = false;
				imageUpdated = true;

			}				
		},
		cancel: function(e) {
			
		},
		error: function(e) {
			
		}
	});
}

function deleteImage() {
	image = false;
	imageUpdated = false;
	$.imageView.image = null;
	$.imageView.visible		= false;
	$.imageView.height		= "0";
	$.imageView.bottom		= "0";
	$.deleteImage.visible = false;  
	//$.gallery.visible = true;
	//$.camera.visible = true;
}

function categories() {
	Alloy.CFG.tabAccount.open(Alloy.createController(
		'categories/index', {
			win: Alloy.CFG.tabAccount,
			name: L('categories'),
			forDeals:true,
			sectionName: sectionName,
			closeCallback: function() {
				subCategories	= [];
				for(var categoryKey in core.currentSectionCategories()) {
					var category = core.currentSectionCategories()[categoryKey];
					for(var subCategoryKey in category)
						subCategories.push(core.currentSectionCategories()[categoryKey][subCategoryKey]);
				}
				showCategories(); 
			}
		}).getView()
	);	
}
